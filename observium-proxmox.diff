diff -urN a/observium/html/includes/entities/virtualmachine.inc.php b/observium/html/includes/entities/virtualmachine.inc.php
--- a/observium/html/includes/entities/virtualmachine.inc.php	2022-12-30 11:53:41.000000000 +0100
+++ b/observium/html/includes/entities/virtualmachine.inc.php	2024-03-27 21:35:56.623947595 +0100
@@ -45,6 +45,9 @@
       case "cpu":
         $sql .= generate_query_values_and($value, 'vm_cpucount');
         break;
+      case "type":
+        $sql .= generate_query_values_and($value, 'vm_type');
+        break;
     }
   }
   $sql .= $GLOBALS['cache']['where']['devices_permitted'];
@@ -65,6 +68,7 @@
     'os'     => array('Operating System'),
     'memory' => array('Memory'),
     'cpu'    => array('CPU'),
+    'type'    => array('Type'),
   );
 
   if ($vars['page'] == "device" || $vars['popup'] == TRUE )
@@ -123,6 +127,9 @@
     case 'cpu':
       $vms = array_sort_by($vms, 'vm_cpucount', $sort_order, SORT_NUMERIC);
       break;
+    case 'type':
+      $vms = array_sort_by($vms, 'vm_type', $sort_order, SORT_STRING);
+      break;
     default:
       // Not sorted
   }
@@ -164,7 +171,7 @@
 {
   global $config;
 
-  $table_cols = "8";
+  $table_cols = "9";
 
   $out =  '<tr class="' . $vm['row_class'] . '">'; // <td class="state-marker"></td>'; // FIXME useful when we start polling VM state
   if ($vars['page'] != "device" && $vars['popup'] != TRUE )
@@ -198,6 +205,7 @@
 
   $out .= '<td>'. format_bi($vm['vm_memory'] * 1024 * 1024, 3, 3) .'B</td>';
   $out .= '<td>'. $vm['vm_cpucount'] .'</td>';
+  $out .= '<td>'. $vm['vm_type'] .'</td>';
   $out .= '</tr>';
 
   return $out;
diff -urN a/observium/html/pages/device/edit/vms.inc.php b/observium/html/pages/device/edit/vms.inc.php
--- a/observium/html/pages/device/edit/vms.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/observium/html/pages/device/edit/vms.inc.php	2024-03-25 13:07:19.363794786 +0100
@@ -0,0 +1,107 @@
+<?php
+
+/**
+ * Observium Network Management and Monitoring System
+ * Copyright (C) 2006-2015, Adam Armstrong - http://www.observium.org
+ *
+ * @package    observium
+ * @subpackage webui
+ * @author     Adam Armstrong <adama@observium.org>
+ * @copyright  (C) 2006-2013 Adam Armstrong, (C) 2013-2019 Observium Limited
+ *
+ */
+
+if ($vars['editing'])
+{
+  if ($readonly)
+  {
+    print_error_permission('You have insufficient permissions to edit settings.');
+  } else {
+    if ($vars['proxmox_username']  != '')  { set_dev_attrib($device, 'proxmox_username' , $vars['proxmox_username']);  } else { del_dev_attrib($device, 'proxmox_username'); }
+    if ($vars['proxmox_password']  != '')  { set_dev_attrib($device, 'proxmox_password' , $vars['proxmox_password']);  } else { del_dev_attrib($device, 'proxmox_password'); }
+    if ($vars['proxmox_realm']  != '')  { set_dev_attrib($device, 'proxmox_realm' , $vars['proxmox_realm']);  } else { del_dev_attrib($device, 'proxmox_realm'); }
+    if ($vars['proxmox_token_name']  != '')  { set_dev_attrib($device, 'proxmox_token_name' , $vars['proxmox_token_name']);  } else { del_dev_attrib($device, 'proxmox_token_name'); }
+    if ($vars['proxmox_token_value']  != '')  { set_dev_attrib($device, 'proxmox_token_value' , $vars['proxmox_token_value']);  } else { del_dev_attrib($device, 'proxmox_token_value'); }
+    $update_message = "Device VM discovery configuration updated.";
+    $updated = 1;
+  }
+  if ($updated && $update_message)
+  {
+    print_message($update_message);
+  }
+  else if ($update_message)
+  {
+    print_error($update_message);
+  }
+}
+
+$device = dbFetchRow("SELECT * FROM `devices` WHERE `device_id` = ?", array($device['device_id']));
+
+    $form = array('type'      => 'horizontal',
+                  'id'        => 'edit',
+                  'title'     => 'VM discovery',
+                  );
+
+    $form['fieldset']['edit'] = [
+        'div'   => 'top',
+        'title' => 'Proxmox Configuration',
+        'class' => 'col-md-6'
+    ];
+
+    $form['fieldset']['submit'] = [
+        'div'   => 'bottom',
+        'style' => 'padding: 0px;',
+        'class' => 'col-md-12'
+    ];
+
+    $form['row'][0]['editing'] = array(
+                                'type'        => 'hidden',
+                                'value'       => 'yes');
+    $form['row'][1]['proxmox_username'] = array(
+                                'type'        => 'text',
+                                'fieldset'    => 'edit',
+                                'name'        => 'Proxmox Username',
+                                'width'       => '250px',
+                                'readonly'    => $readonly,
+                                'value'       => get_dev_attrib($device, 'proxmox_username'));
+    $form['row'][2]['proxmox_password'] = array(
+                                'type'        => 'password',
+                                'fieldset'    => 'edit',
+                                'name'        => 'Proxmox Password',
+                                'width'       => '250px',
+                                'readonly'    => $readonly,
+                                'value'       => get_dev_attrib($device, 'proxmox_password'));
+    $form['row'][3]['proxmox_realm'] = array(
+                                'type'        => 'text',
+                                'fieldset'    => 'edit',
+                                'name'        => 'Proxmox Realm',
+                                'width'       => '250px',
+                                'readonly'    => $readonly,
+                                'value'       => get_dev_attrib($device, 'proxmox_realm'));
+    $form['row'][4]['proxmox_token_name'] = array(
+                                'type'        => 'text',
+                                'fieldset'    => 'edit',
+                                'name'        => 'Proxmox Token name',
+                                'width'       => '250px',
+                                'readonly'    => $readonly,
+                                'value'       => get_dev_attrib($device, 'proxmox_token_name'));
+    $form['row'][5]['proxmox_token_value'] = array(
+                                'type'        => 'password',
+                                'fieldset'    => 'edit',
+                                'name'        => 'Proxmox Token value',
+                                'width'       => '250px',
+                                'readonly'    => $readonly,
+                                'value'       => get_dev_attrib($device, 'proxmox_token_value'));
+    $form['row'][6]['submit'] = array(
+                              'type'        => 'submit',
+                              'fieldset'    => 'submit',
+                              'name'        => 'Save Changes',
+                              'icon'        => 'icon-ok icon-white',
+                              'class'       => 'btn-primary',
+                              'readonly'    => $readonly,
+                              'value'       => 'save');
+
+    print_form($form);
+    unset($form);
+
+// EOF
diff -urN a/observium/html/pages/device/edit.inc.php b/observium/html/pages/device/edit.inc.php
--- a/observium/html/pages/device/edit.inc.php	2023-01-13 13:41:24.000000000 +0100
+++ b/observium/html/pages/device/edit.inc.php	2024-03-25 12:54:19.410243479 +0100
@@ -67,6 +67,10 @@
       $device['os_group'] === 'unix' || is_module_enabled($device, 'unix-agent', 'poller')) { // unix-agent
     $panes['ssh']    = 'SSH';
   }
+  if (($config['enable_proxmox'] && $device['os'] === 'linux') ||                             // proxmox discovery module
+      $device['os_group'] === 'unix') {
+    $panes['vms']    = 'VM discovery';
+  }
   if ($device['os_group'] === 'unix' || $device['os'] === 'generic') {
     $panes['agent']  = 'Agent';
   }
diff -urN a/observium/includes/discovery/storage/proxmox.inc.php b/observium/includes/discovery/storage/proxmox.inc.php
--- a/observium/includes/discovery/storage/proxmox.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/observium/includes/discovery/storage/proxmox.inc.php	2024-03-25 15:26:56.291124968 +0100
@@ -0,0 +1,39 @@
+<?php
+
+// Discover Proxmox storage.
+
+require_once("Proxmox/vendor/autoload.php");
+use Proxmox\Request;
+
+if ($config['enable_proxmox'] == '1' && $device['os'] == "pve")
+{
+  echo("Proxmox storage: ");
+
+    $configure = [
+        'hostname' => $device['hostname'],
+        'username' => get_dev_attrib($device,'proxmox_username'),
+        'password' => get_dev_attrib($device,'proxmox_password'),
+        'realm' => get_dev_attrib($device,'proxmox_realm'),
+        'token_name' => get_dev_attrib($device,'proxmox_token_name'),
+        'token_value' => get_dev_attrib($device,'proxmox_token_value'),
+    ];
+    Request::Login($configure);
+
+    $nodes = Request::Request('/nodes', null, 'GET');
+    foreach ($nodes->data as $node) {
+        if ($device['hostname'] == $node->node) {
+            $storages = Request::Request("/nodes/".$node->node."/storage", null, 'GET');
+            foreach ($storages->data as $val) {
+                echo $val->storage. " ";
+                discover_storage($valid['storage'], $device, $val->storage, $val->type, 'proxmox', $val->storage, 1, $val->total, $val->total - $val->avail, array());
+            }
+            echo(PHP_EOL);
+            echo(PHP_EOL);
+            return;
+        }
+    }
+
+  echo(PHP_EOL);
+  echo(PHP_EOL);
+
+}
diff -urN a/observium/includes/discovery/storage.inc.php b/observium/includes/discovery/storage.inc.php
--- a/observium/includes/discovery/storage.inc.php	2023-03-18 15:32:48.000000000 +0100
+++ b/observium/includes/discovery/storage.inc.php	2023-03-17 16:20:05.000000000 +0100
@@ -10,6 +10,9 @@
  *
  */
 
+// Always run proxmox (module checks for os suitability and enable_proxmox)
+include("includes/discovery/storage/proxmox.inc.php");
+
 // Include all discovery modules
 
 $include_dir = "includes/discovery/storage";
diff -urN a/observium/includes/discovery/virtual-machines/proxmox.inc.php b/observium/includes/discovery/virtual-machines/proxmox.inc.php
--- a/observium/includes/discovery/virtual-machines/proxmox.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/observium/includes/discovery/virtual-machines/proxmox.inc.php	2024-03-27 21:40:11.167948462 +0100
@@ -0,0 +1,75 @@
+<?php
+
+// Try to discover Proxmox Virtual Machines.
+
+require_once("Proxmox/vendor/autoload.php");
+use Proxmox\Request;
+
+if ($config['enable_proxmox'] == '1' && $device['os'] == "pve")
+{
+    echo("Proxmox VM: ");
+
+    $configure = [
+        'hostname' => $device['hostname'],
+        'username' => get_dev_attrib($device,'proxmox_username'),
+        'password' => get_dev_attrib($device,'proxmox_password'),
+        'realm' => get_dev_attrib($device,'proxmox_realm'),
+        'token_name' => get_dev_attrib($device,'proxmox_token_name'),
+        'token_value' => get_dev_attrib($device,'proxmox_token_value'),
+    ];
+    Request::Login($configure);
+
+    $ostypes = [
+        "other" => "unspecified OS",
+        "wxp" => "Microsoft Windows XP",
+        "w2k" => "Microsoft Windows 2000",
+        "w2k3" => "Microsoft Windows 2003",
+        "w2k8" => "Microsoft Windows 2008",
+        "wvista" => "Microsoft Windows Vista",
+        "win7" => "Microsoft Windows 7",
+        "win8" => "Microsoft Windows 8/2012/2012r2",
+        "win10" => "Microsoft Windows 10/2016/2019",
+        "win11" => "Microsoft Windows 11/2022",
+        "l24" => "Linux 2.4 Kernel",
+        "l26" => "Linux 2.6 - 6.X Kernel",
+        "solaris" => "Solaris/OpenSolaris/OpenIndiania kernel"
+    ];
+
+    $vm_insert = array('device_id'   => $device['device_id'],
+                       'vm_type'     => $options['type'],
+                       'vm_uuid'     => $options['id'],
+                       'vm_name'     => $options['name'],
+                       'vm_guestos'  => $options['os'],
+                       'vm_memory'   => $options['memory'] / 1024 / 1024,
+                       'vm_cpucount' => $options['cpucount'],
+                       'vm_state'    => $options['status'],
+                       'vm_source'   => $options['source']);
+
+    $nodes = Request::Request('/nodes', null, 'GET');
+    foreach ($nodes->data as $node) {
+        if ($device['hostname'] == $node->node) {
+            $vms = Request::Request("/nodes/".$node->node."/qemu", null, 'GET');
+            foreach ($vms->data as $vm) {
+                echo $vm->name. " ";
+                $vmconf = Request::Request("/nodes/".$node->node."/qemu/".$vm->vmid."/config", null, 'GET');
+                discover_virtual_machine($valid, $device, array('id' => $vmconf->data->vmgenid, 'name' => $vm->name, 'cpucount' => $vm->cpus,
+                'os' => $ostypes[$vmconf->data->ostype], 'memory' => $vm->maxmem, 'status' => $vm->status, 'type' => 'VM',
+                'source' => 'proxmox', 'protocol' => 'API'));
+            }
+            $lxs = Request::Request("/nodes/".$node->node."/lxc", null, 'GET');
+            foreach ($lxs->data as $lx) {
+                echo $lx->name. " ";
+                $lxconf = Request::Request("/nodes/".$node->node."/lxc/".$lx->vmid."/config", null, 'GET');
+                discover_virtual_machine($valid, $device, array('id' => $lx->vmid, 'name' => $lx->name, 'cpucount' => $lx->cpus,
+                'os' => $lxconf->data->ostype, 'memory' => $lx->maxmem, 'status' => $lx->status, 'type' => 'CT',
+                'source' => 'proxmox', 'protocol' => 'API'));
+            }
+        }
+    }
+
+  // Clean up removed VMs of type proxmox
+  check_valid_virtual_machines($device, $valid, 'proxmox');
+  echo(PHP_EOL);
+}
+
+// EOF
diff -urN a/observium/includes/discovery/virtual-machines.inc.php b/observium/includes/discovery/virtual-machines.inc.php
--- a/observium/includes/discovery/virtual-machines.inc.php	2023-03-17 14:37:45.000000000 +0100
+++ b/observium/includes/discovery/virtual-machines.inc.php	2023-03-17 16:07:52.000000000 +0100
@@ -14,6 +14,8 @@
 
 // Always run libvirt (module checks for os suitability and enable_libvirt)
 include("includes/discovery/virtual-machines/libvirt.inc.php");
+// Always run proxmox (module checks for os suitability and enable_proxmox)
+include("includes/discovery/virtual-machines/proxmox.inc.php");
 
 // Include all discovery modules by MIB
 $include_dir = "includes/discovery/virtual-machines";
diff -urN a/observium/includes/polling/storage/proxmox.inc.php b/observium/includes/polling/storage/proxmox.inc.php
--- a/observium/includes/polling/storage/proxmox.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/observium/includes/polling/storage/proxmox.inc.php	2024-03-25 15:27:45.111711052 +0100
@@ -0,0 +1,36 @@
+<?php
+
+// Polling Proxmox storage.
+
+require_once("Proxmox/vendor/autoload.php");
+use Proxmox\Request;
+
+if ($config['enable_proxmox'] == '1' && $device['os'] == "pve")
+{
+    $configure = [
+        'hostname' => $device['hostname'],
+        'username' => get_dev_attrib($device,'proxmox_username'),
+        'password' => get_dev_attrib($device,'proxmox_password'),
+        'realm' => get_dev_attrib($device,'proxmox_realm'),
+        'token_name' => get_dev_attrib($device,'proxmox_token_name'),
+        'token_value' => get_dev_attrib($device,'proxmox_token_value'),
+    ];
+    Request::Login($configure);
+    $nodes = Request::Request('/nodes', null, 'GET');
+    foreach ($nodes->data as $node) {
+        if ($device['hostname'] == $node->node) {
+            $storages = Request::Request("/nodes/".$node->node."/storage", null, 'GET');
+            foreach ($storages->data as $val) {
+                if ($val->storage == $storage['storage_descr']) {
+                    $storage['units'] = 1;
+                    $storage['size']  = $val->total;
+                    $storage['free']  = $val->avail;
+                    $storage['used']  = $val->total - $val->avail;
+                }
+            }
+            return;
+        }
+    }
+}
+
+// EOF
